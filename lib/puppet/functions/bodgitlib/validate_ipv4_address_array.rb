# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----
#
# validate_ipv4_address_array.rb
#

# ---- original file header ----
#
# @summary
#       Validate that all values passed as an array are all valid IPv4 addresses.
#
#
Puppet::Functions.create_function(:'bodgitlib::validate_ipv4_address_array') do
  # @param arguments
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :arguments
  end


  def default_impl(*arguments)
    

    raise(Puppet::ParseError, 'validate_ipv4_address_array(): Wrong number ' +
      "of arguments given (#{arguments.size} for 1)") if arguments.size != 1

    item = arguments[0]

    unless item.is_a?(Array)
      raise(Puppet::ParseError, 'validate_ipv4_address_array(): Requires an ' +
        'array to work with')
    end

    if item.size == 0
      raise(Puppet::ParseError, 'validate_ipv4_address_array(): Requires an ' +
        'array with at least 1 element')
    end

    function_validate_ipv4_address(item.flatten)
  
  end
end
