# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----
#
# validate_ldap_dn.rb
#

if RUBY_VERSION < '1.9'
  # :nocov:
  begin
    require 'oniguruma'
  rescue LoadError
    require 'rubygems'
    retry
  end
  # :nocov:
end

# ---- original file header ----
#
# @summary
#       Validate that all passed values are LDAP distinguished names. Abort catalog
#    compilation if any value fails this check.
#
#
Puppet::Functions.create_function(:'bodgitlib::validate_ldap_dn') do
  # @param arguments
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :arguments
  end


  def default_impl(*arguments)
    

    raise(Puppet::ParseError, 'validate_ldap_dn(): Wrong number of ' +
      "arguments given (#{arguments.size} for 1)") if arguments.size != 1

    # RFC 1779/2253
    re = <<-'EOR'
    ^
    (?<comp>
      (?<tv>
        (?:
          [[:alpha:]] [[:alnum:]_-]*
          |
          (?:
            (?:
              oid
              |
              OID
            )
            \.
          )?
          [[:digit:]]+ (?: \. [[:digit:]]+ )*
        )
        [[:space:]]* = [[:space:]]*
        (?:
          \# (?: [[:xdigit:]]{2} )+
          |
          (?:
            [^,=\+<>#;\\"]
            |
            \\ [,=\+<>#;\\"]
            |
            \\ [[:xdigit:]]{2}
          )*
          |
          "
          (?:
            [^\\"]
            |
            \\ [,=\+<>#;\\"]
            |
            \\ [[:xdigit:]]{2}
          )*
          "
        )
      )
      (?: [[:space:]]* \+ [[:space:]]* \g<tv> )*
    )
    (?: [[:space:]]* [,;] [[:space:]]* \g<comp> )*
    $
    EOR

    if RUBY_VERSION < '1.9'
      # :nocov:
      dn = Oniguruma::ORegexp.new(re, :options => Oniguruma::OPTION_EXTEND)
      # :nocov:
    else
      dn = Regexp.new(re, Regexp::EXTENDED)
    end

    item = arguments[0]

    unless item.is_a?(Array)
      item = [item]
    end

    if item.size == 0
      raise(Puppet::ParseError, 'validate_ldap_dn(): Requires an array ' +
        'with at least 1 element')
    end

    item.each do |i|
      unless i.is_a?(String)
        raise(Puppet::ParseError, 'validate_ldap_dn(): Requires either an ' +
          'array or string to work with')
      end

      unless i =~ dn
        raise(Puppet::ParseError, "#{i.inspect} is not a valid LDAP " +
          "distinguished name")
      end
    end
  
  end
end
